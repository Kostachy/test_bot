services:
  tg_bot:
    image: bot_image
    container_name: app.tg_bot
    hostname: app.tg_bot
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      app_db:
        condition: service_healthy
    networks:
      - app_tg_bot_network

  app_db:
    image: library/postgres:16-alpine
    container_name: app.postgres
    hostname: app.postgres
    env_file:
      - .env
    volumes:
      - app_pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    ports:
      - "65432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 10s
    networks:
      - app_tg_bot_network

#  pg_admin:
#    image: dpage/pgadmin4
#    container_name: app.pg_admin
#    hostname: app.pg_admin
#    ports:
#      - "8000:80"
#    environment:
#      - PGADMIN_DEFAULT_EMAIL=user@domain.com
#      - PGADMIN_DEFAULT_PASSWORD=SuperSecret
#    networks:
#      - app_tg_bot_network

volumes:
  app_pg_data: { }

networks:
  app_tg_bot_network: { }
